option:
1. показывает содержимое директории, где мы находимся
2. показывает текущее время и дату
3. показывает наличее или отсутствие заданного файл или директории. А также сообщает о том, что это файл или директория.
4. создает резервную копию выбранного файла (файл.bak)
5. закрывает программу

options=(
	'1'
	"2"
	'3'               ////Bash-файл содержит массив 'options' с 5ю значениями:
	'4'
	'5'
)

echo 'Please choose an option'         ///// выводит на экран строку 'Please choose an option' 

select input in "${options[@]}"; do    ///// далее вводим значения из массива "options"

	case "$input" in               ///// case позволяет сделать выбор между условиями в зависимости от значения из массива

		"${options[0]}")      
			ls             ///// при значении 1 показывает содержимое директории, где мы находимся
			;;
		"${options[1]}")
			date $'+Time: %T\nDate: %D'     ///// при значении 2 показывает текущее время и дату
			;;
		"${options[2]}")
			read -p 'What file do you wish to check? ' finput  ///// при значении 3 выводит 'What file do you wish to check?'
                                                                                 read- читает введеное значение файла или директории

                                                                    ///// вводим файл или директорию, который хотим проверить и выполняется условие 
 
			if [[ -d $finput ]]; then                   
				format='%s is a directory.\n'      /////  если это директория. то вывод будет name+is a directory
			elif [[ -f $finput ]]; then
				format='%s is a file.\n'           /////  если это файл. то вывод будет name+is is a file
			else
				format='%s does not exist.\n'      ///// если такого name нету в нашей директории то name+does not exist
			fi
			printf "$format" "$finput"
			;;
		"${options[3]}")                                   
			read -p 'Please enter filename: ' binput  ///// при значении 4 выводит 'Please enter filename:'
                                                                        read- читает введеное значение 

			cp "$binput"{,.bak}                       ///// создает резервную копию (файл.bak) выбранного файла
			;;
		"${options[4]}")                                  /////  при значении 5 происходит выход из программы
			break
			;;
		*)
			echo 'Not a valid option.'                ///// если введеное значение не из массива "options" то выводиться
			;;                                               'Not a valid option.'
	esac
done